//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ND.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("server=.;database=db_ND10L;uid=sa;pwd=123")]
        public string SqlName {
            get {
                return ((string)(this["SqlName"]));
            }
            set {
                this["SqlName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("192.168.10.101")]
        public string SocketIp {
            get {
                return ((string)(this["SocketIp"]));
            }
            set {
                this["SocketIp"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=192.168.10.188;Initial Catalog=rgvBaking6line;uid=root;pwd=root;")]
        public string Dbsql {
            get {
                return ((string)(this["Dbsql"]));
            }
            set {
                this["Dbsql"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://ndmesd003.ATLbattery.com:50000/atlmeswebservice/MiCheckSFCStatusServiceSer" +
            "vice")]
        public string NDL10_ElectricCoreState_MiCheckSFCStatusServiceService {
            get {
                return ((string)(this["NDL10_ElectricCoreState_MiCheckSFCStatusServiceService"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://ndmesd003.ATLbattery.com:50000/atlmeswebservice/MiBindSFCintoTrayServiceSe" +
            "rvice")]
        public string NDL10_BindingPallt_MiBindSFCintoTrayServiceService {
            get {
                return ((string)(this["NDL10_BindingPallt_MiBindSFCintoTrayServiceService"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://ndmesd003.ATLbattery.com:50000/atlmeswebservice/CellTestIntegrationService" +
            "Service")]
        public string NDL10_CoreList_CellTestIntegrationServiceService {
            get {
                return ((string)(this["NDL10_CoreList_CellTestIntegrationServiceService"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://ndmesd003.ATLbattery.com:50000/atlmeswebservice/MiDataCollectForProcessLot" +
            "ForEachServiceService1")]
        public string NDL10_ChargeNumber_MiDataCollectForProcessLotForEachServiceService {
            get {
                return ((string)(this["NDL10_ChargeNumber_MiDataCollectForProcessLotForEachServiceService"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://172.26.11.3:50000/atlmeswebservice/MiCheckProcessLotServiceService?wsdl")]
        public string NDL10_PalletInspection_MiCheckProcessLotServiceService {
            get {
                return ((string)(this["NDL10_PalletInspection_MiCheckProcessLotServiceService"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://ndmesd003.ATLbattery.com:50000/atlmeswebservice/MiCheckProcessLotServiceSe" +
            "rvice")]
        public string NDL10_PattelCheck_MiCheckProcessLotServiceService {
            get {
                return ((string)(this["NDL10_PattelCheck_MiCheckProcessLotServiceService"]));
            }
        }
    }
}
